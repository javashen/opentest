cmake_minimum_required(VERSION 3.10)
project(opentest)
add_executable(opentest opentest.c)

# Search OpenSSL
find_package(PkgConfig REQUIRED)
pkg_search_module(OPENSSL REQUIRED IMPORTED_TARGET openssl)

if( OPENSSL_FOUND )
    #include_directories(${OPENSSL_INCLUDE_DIRS})
    message(STATUS "Using OpenSSL ${OPENSSL_VERSION}")
    message(STATUS "OpenSSL library is: ${OPENSSL_LIBRARIES}")
    message(STATUS "OpenSSL include dir is: ${OPENSSL_INCLUDE_DIRS}")
    message(STATUS "OpenSSL library dir is: ${OPENSSL_LIBRARY_DIRS}")
else()
    # Error; with REQUIRED, pkg_search_module() will throw an error by it's own
endif()

target_link_libraries(opentest PkgConfig::OPENSSL) 

# Search zlib 
pkg_search_module(ZLIB REQUIRED IMPORTED_TARGET zlib)

if( ZLIB_FOUND )
    #include_directories(${OPENSSL_INCLUDE_DIRS})
    message(STATUS "Using ZLIB ${ZLIB_VERSION}")
    message(STATUS "ZLIB library is: ${ZLIB_LIBRARIES}")
else()
    # Error; with REQUIRED, pkg_search_module() will throw an error by it's own
endif()

target_link_libraries(opentest PkgConfig::ZLIB) 

# Search BZip2 
find_package(BZip2 REQUIRED)
#include_directories(${OPENSSL_INCLUDE_DIRS})
message(STATUS "Using BZip2 ${BZIP2_VERSION_STRING}")
message(STATUS "BZip2 library is: ${BZIP2_LIBRARIES}")
message(STATUS "BZip2 include dir is: ${BZIP2_INCLUDE_DIR}")
target_include_directories(opentest PRIVATE ${BZIP2_INCLUDE_DIR})
target_link_libraries(opentest ${BZIP2_LIBRARIES}) 